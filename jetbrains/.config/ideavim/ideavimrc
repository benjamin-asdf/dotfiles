let mapleader=" "
set multiple-cursors
set surround
set is
set ic
set scs
set ignorecase
set ideajoin
set gdefault
set commentary


" "https://github.com/AlexPl292/IdeaVim-EasyMotion TODO

" Scroll screen with the cursor
noremap <C-k> 2<C-e>
noremap <C-l> 2<C-y>



" Previous / next match
noremap { ,
noremap } ;

noremap <a-k> }
noremap <a-l> {

" ============================================================================
" Visual
" ============================================================================

noremap <a-v> V

" ============================================================================
" Editing
" ============================================================================

nnoremap <leader>oe :action emacsclient<CR>

" Moving blocks of text in visual mode
vnoremap < <gv
vnoremap > >gv

" Select all text
map <leader>a ggVG

" Copy until the end of the line
noremap Y y$

" ============================================================================
" Editor control
" ============================================================================

" Reload .ideavimrc
nnoremap <leader>vs :source ~/.ideavimrc<CR>

" source ~/repos/intellimacs/spacemacs.vim
" source ~/repos/intellimacs/extra.vim
" source ~/repos/intellimacs/major.vim
" source ~/repos/intellimacs/hybrid.vim

" " Comma for major mode
" nmap , <leader>m
" vmap , <leader>m


" ============================================================================
" IDE actions
" ============================================================================

nnoremap U :action $Redo<CR>
nnoremap s :action emacsIDEAs.AceJumpWord<CR> TODO
nmap gb :action Back<CR>

nmap gh :action ShowErrorDescription<cr>
nmap ge :action QuickJavaDoc<cr>


nmap <leader>l :action KJumpAction<cr>
nmap <leader>jw :action KJumpAction.Word0<cr>
nmap <leader>jl :action KJumpAction.Line<cr>
nmap <leader>pp :action FindInPath<cr>
nmap <leader>pr :action ReplaceInPath<cr>
nmap <leader>pg :action SearchEverywhere<cr>
nmap <leader>ps :action GotoSymbol<cr>
nmap <leader>pc :action GotoClass<cr>
nmap <leader>pf :action GotoFile<cr>
nmap <leader><leader> :action GotoAction<cr>
map <C-n> :action SelectNextOccurrence<cr>
nmap <leader>ca :action SelectAllOccurrences<cr>
nmap <leader>wl :action VimWindowLeft<cr>
nmap <leader>wq :action VimWindowClose<cr>
nmap <leader>ww :action VimWindowNext<cr>
nmap <leader>wo :action VimWindowOnly<cr> <bar> :action CloseAllEditorsButActive<cr>
nmap <leader>wp :action VimWindowPrev<cr>
nmap <leader>wr :action VimWindowRight<cr>
nmap <leader>wn :action VimWindowSplitVertical<cr>

" misc actions
inoremap <C-/> :action EditorCompleteStatement<CR>

" help"
nnoremap <leader>hd :action QuickJavaDoc<CR>

nnoremap <leader>dE :action EvaluateExpression<CR>
nnoremap <leader>de :action QuickEvaluateExpression<CR>

"navigation and search
nnoremap gu :action ShowUsages<CR>
nnoremap gU :action FindUsages<CR>
nnoremap gI :action GotoImplementation<CR>
nmap gi :action ReSharperGotoImplementation<CR>




" ideavim regex are a bit buggy, cannot use regex from vimrc
nnoremap ]c /\\<trait\>\\\|\\<class\>\\\|\\<object\>\\\|\\<interface\>\\\|\\<enum\><CR>w:nohlsearch<CR>
nnoremap [c b?\\<trait\>\\\|\\<class\>\\\|\\<object\>\\\|\\<interface\>\\\|\\<enum\><CR>w:nohlsearch<CR>

nnoremap ]d /\\<def\><CR>w:nohlsearch<CR>
nnoremap [d b?\\<def\><CR>w:nohlsearch<CR>



"errors
nnoremap <leader>en :action GotoNextError<CR>
nnoremap <leader>ep :action GotoPreviousError<CR>

nnoremap gcc :vsc Edit.ToggleComment<CR>
vnoremap gc :vsc Edit.ToggleComment<CR><Esc><Esc>
