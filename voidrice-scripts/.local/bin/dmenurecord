#!/bin/sh

# Usage:
# `record`: Ask for recording type via dmenu
# `record screencast`: Record both audio and screen
# `record video`: Record only screen
# `record audio`: Record only audio
# `record kill`: Kill existing recording
#
# If there is already a running instance, user will be prompted to end it.

updateicon() { \
	echo "$1" > /tmp/recordingicon
	}

killrecording() {
	recpid="$(cat /tmp/recordingpid)"
	# kill with SIGTERM, allowing finishing touches.
	kill -15 "$recpid"
	rm -f /tmp/recordingpid
	updateicon ""
	# even after SIGTERM, ffmpeg may still run, so SIGKILL it.
	sleep 3
	kill -9 "$recpid"
	exit
	}

screencast() { \
	ffmpeg -y \
	-f x11grab \
	-framerate 60 \
	-s $(xdpyinfo | grep dimensions | awk '{print $2;}') \
	-i :0.0 \
	-f alsa -i default \
	-r 30 \
 	-c:v libx264rgb -crf 0 -preset ultrafast -c:a flac \
	"$HOME/Videos/recordings/screencast-$(date '+%y%m%d-%H%M-%S').mkv" &
	echo $! > /tmp/recordingpid
	updateicon "‚è∫Ô∏èüéôÔ∏è"
       	}

grabvideo() {
		slop=$(slop -f "%x %y %w %h %g %i") || exit 1
		read -r X Y W H G ID <<<$(echo "$slop")
		echo "slop $X $Y $W $H $G $ID"
		ffmpeg \
	-f x11grab \
	-s "$W"x"$H" \
	-i :0.0+$X,$Y \
	-c:v libvpx \
	-r 30 -g 90 -quality realtime -speed 6 -threads 4 -qmin 4 -qmax 48 -b:v 1800k \
	"$HOME/Videos/recordings/video-$(date '+%y%m%d-%H%M-%S').webm" &
	echo $! > /tmp/recordingpid
	updateicon "‚è∫"
}

video() {
		ffmpeg \
	-f x11grab \
	-s $(xdpyinfo | grep dimensions | awk '{print $2;}') \
	-i :0.0 \
 	-c:v libx264 -r 30 \
	"$HOME/Videos/recordings/video-$(date '+%y%m%d-%H%M-%S').mkv" &
	echo $! > /tmp/recordingpid
	updateicon "‚è∫"
	}

webcamhidef() { ffmpeg \
	-f v4l2 \
	-i /dev/video0 \
	-video_size 1920x1080 \
	"$HOME/Videos/recordings/webcam-$(date '+%y%m%d-%H%M-%S').mkv" &
	echo $! > /tmp/recordingpid
	updateicon "‚è∫"
	}

webcam() { ffmpeg \
	-f v4l2 \
	-i /dev/video0 \
	-video_size 640x480 \
	"$HOME/Videos/recordings/webcam-$(date '+%y%m%d-%H%M-%S').mkv" &
	echo $! > /tmp/recordingpid
	updateicon "‚è∫"
	}


audio() { \
	ffmpeg \
	-f pulse -i alsa_input.usb-Samson_Technologies_Samson_Meteor_Mic-00.analog-stereo \
	-c:a flac \
	"$HOME/Videos/recordings/audio-$(date '+%y%m%d-%H%M-%S').flac" &
	echo $! > /tmp/recordingpid
	updateicon "‚è∫"
	}

askquality() {
		quality=$(printf "2\\n5\\n7" | dmenu -i -p "Select quality (higher = better):")
}

askrecording() { \
	choice=$(printf "grabvideo\\nscreencast\\nvideo\\naudio\\nwebcam\\nwebcam (hi-def)" | dmenu -i -p "Select recording style:")
	# [ "$choice" = "grabvideo" ] && askquality
	case "$choice" in
		grabvideo) grabvideo;;
		screencast) screencast;;
		audio) audio;;
		video) video;;
		webcam) webcam;;
		"webcam (hi-def)") webcamhidef;;
	esac
}

asktoend() { \
	response=$(printf "No\\nYes" | dmenu -i -p "Recording still active. End recording?") &&
	[ "$response" = "Yes" ] &&  killrecording
}

case "$1" in
	grabvideo) grabvideo;;
	screencast) screencast;;
	audio) audio;;
	video) video;;
	kill) killrecording;;
	*) ([ -f /tmp/recordingpid ] && asktoend && exit) || askrecording;;
esac
